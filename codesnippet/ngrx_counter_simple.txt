
export const appConfig: ApplicationConfig = {
  providers: [provideRouter(routes), provideStore({'counter':counterreducer})]
};

========================

export const increment = createAction('[Counter] Increment');
export const decrement = createAction('[Counter] Decrement');

========================
let iState = 1000;
export const counterreducer = 
    createReducer(iState,
        on(increment,(state)=>{return state +1;}),
        on(decrement,(state)=>{return state -1;})
        );

=========================
export class CounterComponent {
  public counter$:Observable<number>;
  constructor(private store:Store<{counter:number}>){
    this.counter$ = store.select('counter');
  }

  public inc():void {
    this.store.dispatch(increment());
  }
  public dec():void {
    this.store.dispatch(decrement());
  }
}
================================
<h3>count : {{counter$ | async}}</h3>
<div>
    <button (click)="inc()">Inc</button>
    <button (click)="dec()">Dec</button>
</div>
===================================

